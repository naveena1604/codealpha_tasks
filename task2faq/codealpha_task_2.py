# -*- coding: utf-8 -*-
"""codealpha task 2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EfMFIFUlu_o2VrNESznKM6Fd73a1cE17
"""

!pip install nltk scikit-learn ipywidgets --quiet

import pandas as pd
import numpy as np
import re
import nltk
import ipywidgets as widgets
from IPython.display import display, clear_output
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

nltk.download('punkt')
nltk.download('stopwords')

faq_data = {
    "question": [
        "What are your working hours?",
        "How can I reset my password?",
        "Where are you located?",
        "What payment methods do you accept?",
        "How do I contact customer support?",
        "Can I cancel my order?",
        "How long does delivery take?",
        "Is there a return policy?",
        "Do you ship internationally?",
        "What is your refund process?",
        "How do I track my order?",
        "Do you offer same-day delivery?",
        "Is cash on delivery available?",
        "Can I change my shipping address after placing an order?",
        "How do I apply a discount coupon?",
        "Do you have a mobile app?",
        "What should I do if I receive a damaged product?",
        "Are there any shipping charges?",
        "How can I delete my account?",
        "Do you store my payment information?"
    ],
    "answer": [
        "We are open from 9 AM to 6 PM, Monday to Saturday.",
        "Click on 'Forgot Password' and follow the instructions to reset it.",
        "We are located at 1234 AI Street, Tech City.",
        "We accept credit cards, debit cards, UPI, and net banking.",
        "You can contact customer support through our Help Center or call 1800-123-456.",
        "Yes, you can cancel your order before it is shipped.",
        "Delivery usually takes 3 to 5 business days.",
        "Yes, we offer a 7-day return policy.",
        "Yes, we ship to most countries worldwide.",
        "Refunds are processed within 5â€“7 days after return approval.",
        "To track your order, go to 'My Orders' and click on 'Track Package'.",
        "Yes, same-day delivery is available in select cities for eligible products.",
        "Yes, cash on delivery is available for orders below â‚¹10,000.",
        "Please contact support immediately to update your shipping address.",
        "Enter your coupon code at checkout to apply the discount.",
        "Yes, our mobile app is available on both Android and iOS platforms.",
        "Please contact support within 48 hours of delivery to report a damaged item.",
        "Shipping is free for orders above â‚¹500. Otherwise, a nominal fee applies.",
        "To delete your account, please email privacy@yourstore.com.",
        "We do not store your payment information. All payments are securely processed."
    ]
}

faq_df = pd.DataFrame(faq_data)

stop_words = set(stopwords.words('english'))

def preprocess(text):
    text = text.lower()
    text = re.sub(r'[^a-zA-Z\s]', '', text)
    tokens = word_tokenize(text)
    filtered = [word for word in tokens if word not in stop_words]
    return ' '.join(filtered)

# Download the punkt_tab resource
nltk.download('punkt_tab')

faq_df['processed_question'] = faq_df['question'].apply(preprocess)

vectorizer = TfidfVectorizer()
faq_vectors = vectorizer.fit_transform(faq_df['processed_question'])

def get_faq_answer(user_question):
    processed_input = preprocess(user_question)
    user_vector = vectorizer.transform([processed_input])
    similarities = cosine_similarity(user_vector, faq_vectors)

    max_score = np.max(similarities)
    best_match_index = np.argmax(similarities)

    if max_score < 0.3:
        return "Sorry, I couldn't find a relevant answer. Please rephrase your question."
    else:
        return faq_df.loc[best_match_index, 'answer']

# Widgets
chat_input = widgets.Text(placeholder='Type your message...', description='You:')
chat_output = widgets.Output()
chat_button = widgets.Button(description="Send", button_style='primary')

# Chat history
chat_log = []

# Callback
def chat_handler(b):
    user_msg = chat_input.value.strip()
    chat_input.value = ""

    if not user_msg:
        return

    with chat_output:
        if user_msg.lower() == "bye" or user_msg == "Bye" or user_msg == "BYE":
            print("You: bye")
            print("ðŸ¤– Chatbot: Goodbye! Have a nice day. ðŸ‘‹")
            chat_button.disabled = True
            chat_input.disabled = True
        else:
            reply = get_faq_answer(user_msg)
            chat_log.append(f"You: {user_msg}")
            chat_log.append(f"ðŸ¤– Chatbot: {reply}")
            clear_output()
            for msg in chat_log:
                print(msg)

# Bind button
chat_button.on_click(chat_handler)

# Display
display(widgets.VBox([chat_input, chat_button, chat_output]))



