# -*- coding: utf-8 -*-
"""codealpha task 1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qK2S63mkwTIWzM8uc7LrXSVw_V5N6nvw
"""

!pip install googletrans==4.0.0-rc1 gTTS

from googletrans import Translator, LANGUAGES
from gtts import gTTS
from IPython.display import Audio, display
import ipywidgets as widgets

# Translator instance
translator = Translator()

# Language mapping
lang_codes = {name.title(): code for code, name in LANGUAGES.items()}
lang_names = sorted(lang_codes.keys())

# Text input
text_input = widgets.Textarea(
    placeholder='Enter text here...',
    description='Text:',
    layout=widgets.Layout(width='100%', height='100px'),
    style={'description_width': 'initial'}
)

# Language selectors
src_lang = widgets.Dropdown(
    options=lang_names,
    value='English',
    description='From:',
    style={'description_width': 'initial'}
)
tgt_lang = widgets.Dropdown(
    options=lang_names,
    value='French',
    description='To:',
    style={'description_width': 'initial'}
)

# Output box
output_box = widgets.Textarea(
    value='',
    placeholder='Translation will appear here...',
    description='Translated:',
    layout=widgets.Layout(width='100%', height='100px'),
    disabled=True,
    style={'description_width': 'initial'}
)

# Buttons
translate_button = widgets.Button(description="üîÅ Translate", button_style='primary')
tts_button = widgets.Button(description="üîä Text to Speech", button_style='info')

def on_translate_clicked(b):
    text = text_input.value.strip()
    if text == '':
        output_box.value = "‚ùó Please enter text."
        return

    src = lang_codes[src_lang.value]
    tgt = lang_codes[tgt_lang.value]
    try:
        translation = translator.translate(text, src=src, dest=tgt)
        output_box.value = translation.text
    except Exception as e:
        output_box.value = f"Error: {str(e)}"

def on_tts_clicked(b):
    text = output_box.value.strip()
    if text == '':
        output_box.value = "‚ùó Translate something first."
        return
    try:
        tts = gTTS(text, lang=lang_codes[tgt_lang.value])
        tts.save("tts_output.mp3")
        display(Audio("tts_output.mp3", autoplay=True))
    except Exception as e:
        output_box.value = f"TTS Error: {str(e)}"

# Bind actions
translate_button.on_click(on_translate_clicked)
tts_button.on_click(on_tts_clicked)

# Display widgets in order
widgets.VBox([
    text_input,
    widgets.HBox([src_lang, tgt_lang]),
    translate_button,
    output_box,
    tts_button
])

